services:
  ####################################
  #          INFRASTRUCTURE          #
  ####################################
  nginx:
    image: nginx
    hostname: local
    container_name: nginx
    mem_limit: 128m
    mem_reservation: 128M
    cpus: 0.5
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - book-search-service
    ports:
      - '80:80'
    networks:
      - backend


  ####################################
  #             DATABASES            #
  ####################################
  elasticsearch:
    image: elasticsearch:8.8.0
    hostname: local
    container_name: elastic-search
    mem_limit: 1536m
    mem_reservation: 128M
    cpus: 4
    volumes:
      - ./elasticsearch/data/:/usr/share/elasticsearch/data
    env_file:
      - ./elasticsearch/config.env
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - backend
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200" ]
      interval: 30s
      timeout: 30s
      retries: 20

  mongo:
    image: arm64v8/mongo
    hostname: local
    container_name: mongo
    mem_limit: 128m
    mem_reservation: 128M
    cpus: 1
    env_file:
      - config.env
    ports:
      - '27017:27017'
    volumes:
      - /var/lib/mongodb:/data/db
    networks:
      - backend

  influxdb:
    image: influxdb:1.8-alpine
    hostname: local
    container_name: influxdb
    mem_limit: 256m
    mem_reservation: 128M
    cpus: 0.5
    ports:
      - '127.0.0.1:8086:8086'
    volumes:
      - ./:/imports
      - influxdb_data:/var/lib/influxdb
    networks:
      - monitoring


  ####################################
  #              BACKEND             #
  ####################################
  book-search-service:
    build:
      context: ./book-search-service
    hostname: local
    container_name: book-search-service
    mem_limit: 670m
    mem_reservation: 128M
    cpus: 4
    env_file:
      - ./book-search-service/config.env
    depends_on:
      - elasticsearch
      - mongo
    links:
      - elasticsearch
      - mongo
    ports:
      - "8080:8080"
    networks:
      - backend


  ####################################
  #            MONITORING            #
  ####################################
  grafana:
    image: grafana/grafana:8.0.2
    hostname: local
    container_name: grafana
    mem_limit: 256m
    mem_reservation: 128M
    cpus: 0.5
    depends_on:
      - influxdb
    links:
      - influxdb
    ports:
      - '127.0.0.1:3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/
    networks:
      - monitoring

  telegraf:
    image: telegraf:1.18-alpine
    platform: linux/arm64
    hostname: local
    container_name: telegraf
    mem_limit: 256m
    mem_reservation: 128M
    cpus: 0.5
    volumes:
      - ./telegraf/etc/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock
    entrypoint: /bin/bash -c "chmod 666 /var/run/docker.sock && /entrypoint.sh telegraf"
    depends_on:
      - influxdb
    links:
      - influxdb
    ports:
      - '127.0.0.1:8125:8125/udp'
    networks:
      - backend
      - monitoring


volumes:
  grafana_data: {}
  influxdb_data: {}


networks:
  backend:
  monitoring: